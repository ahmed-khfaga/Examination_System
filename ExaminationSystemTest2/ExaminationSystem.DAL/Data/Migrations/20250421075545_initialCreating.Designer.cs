// <auto-generated />
using System;
using ExaminationSystem.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExaminationSystem.DAL.Data.Migrations
{
    [DbContext(typeof(ExaminitionSystemDbContext))]
    [Migration("20250421075545_initialCreating")]
    partial class initialCreating
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourseInstructor", b =>
                {
                    b.Property<int>("CoursesID")
                        .HasColumnType("int");

                    b.Property<int>("InstructorsID")
                        .HasColumnType("int");

                    b.HasKey("CoursesID", "InstructorsID");

                    b.HasIndex("InstructorsID");

                    b.ToTable("CourseInstructor");
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.Property<int>("CoursesID")
                        .HasColumnType("int");

                    b.Property<int>("StudentsID")
                        .HasColumnType("int");

                    b.HasKey("CoursesID", "StudentsID");

                    b.HasIndex("StudentsID");

                    b.ToTable("CourseStudent");
                });

            modelBuilder.Entity("ExaminationSystem.DAL.Models.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID")
                        .HasName("PK__Course__3214EC275B31593B");

                    b.HasIndex(new[] { "Name" }, "UQ__Course__737584F61367C110")
                        .IsUnique();

                    b.ToTable("Course", (string)null);
                });

            modelBuilder.Entity("ExaminationSystem.DAL.Models.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID")
                        .HasName("PK__Departme__3214EC27F1174726");

                    b.HasIndex(new[] { "Name" }, "UQ__Departme__737584F653CD3C1A")
                        .IsUnique();

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("ExaminationSystem.DAL.Models.ExamModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<TimeOnly>("Date")
                        .HasColumnType("time")
                        .HasColumnName("date");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time")
                        .HasColumnName("endTime");

                    b.Property<int>("InstructorId")
                        .HasColumnType("int")
                        .HasColumnName("instructorID");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time")
                        .HasColumnName("startTime");

                    b.HasKey("ID")
                        .HasName("PK__ExamMode__3214EC27B24958E0");

                    b.HasIndex("CourseId");

                    b.HasIndex("InstructorId");

                    b.ToTable("ExamModel", (string)null);
                });

            modelBuilder.Entity("ExaminationSystem.DAL.Models.ExamModelQuestion", b =>
                {
                    b.Property<int>("ExamModelId")
                        .HasColumnType("int")
                        .HasColumnName("examModelID");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int")
                        .HasColumnName("questionID");

                    b.Property<string>("CorrectChoice")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("correctChoice");

                    b.Property<int>("Mark")
                        .HasColumnType("int")
                        .HasColumnName("mark");

                    b.HasKey("ExamModelId", "QuestionId")
                        .HasName("PK__ExamMode__35117C44B0348E50");

                    b.HasIndex("QuestionId");

                    b.ToTable("ExamModel_Question", (string)null);
                });

            modelBuilder.Entity("ExaminationSystem.DAL.Models.Instructor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("ExaminationSystem.DAL.Models.QuestionBank", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CorrectChoice")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("correctChoice");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("courseID");

                    b.Property<DateTime?>("InsertionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insertionDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("InstructorId")
                        .HasColumnType("int")
                        .HasColumnName("instructorID");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("questionText");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.HasKey("ID")
                        .HasName("PK__Question__3214EC27602A1141");

                    b.HasIndex("CourseId");

                    b.HasIndex("InstructorId");

                    b.ToTable("QuestionBank", (string)null);
                });

            modelBuilder.Entity("ExaminationSystem.DAL.Models.QuestionBankChoice", b =>
                {
                    b.Property<int>("QuestionId")
                        .HasColumnType("int")
                        .HasColumnName("questionID");

                    b.Property<string>("Choice")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("QuestionId", "Choice")
                        .HasName("PK__Question__90F6A66A39E34133");

                    b.ToTable("QuestionBank_Choice", (string)null);
                });

            modelBuilder.Entity("ExaminationSystem.DAL.Models.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("address");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int")
                        .HasColumnName("departmentID");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("firstName");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("gender");

                    b.Property<int>("InstouctorID")
                        .HasColumnType("int");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("lastName");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("phone");

                    b.HasKey("ID")
                        .HasName("PK__Student__3214EC270133B1E4");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("InstouctorID");

                    b.HasIndex(new[] { "Email" }, "UQ__Student__AB6E6164EA4F3A50")
                        .IsUnique();

                    b.HasIndex(new[] { "Phone" }, "UQ__Student__B43B145F789254A2")
                        .IsUnique();

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("ExaminationSystem.DAL.Models.StudentSubmit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ExamModelId")
                        .HasColumnType("int")
                        .HasColumnName("examModelID");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("studentID");

                    b.Property<DateTime?>("SubmitDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("submitDate")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__StudentS__3214EC2765B8348D");

                    b.HasIndex("ExamModelId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentSubmit", (string)null);
                });

            modelBuilder.Entity("ExaminationSystem.DAL.Models.StudentSubmitAnswer", b =>
                {
                    b.Property<int>("StudentSubmitId")
                        .HasColumnType("int")
                        .HasColumnName("StudentSubmitID");

                    b.Property<string>("StudentAnswer")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("studentAnswer");

                    b.Property<int>("ExamModelId")
                        .HasColumnType("int")
                        .HasColumnName("examModelID");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int")
                        .HasColumnName("questionID");

                    b.HasKey("StudentSubmitId", "StudentAnswer")
                        .HasName("PK__StudentS__660F8DE877CAD984");

                    b.HasIndex("ExamModelId", "QuestionId");

                    b.ToTable("StudentSubmit_Answer", (string)null);
                });

            modelBuilder.Entity("CourseInstructor", b =>
                {
                    b.HasOne("ExaminationSystem.DAL.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExaminationSystem.DAL.Models.Instructor", null)
                        .WithMany()
                        .HasForeignKey("InstructorsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.HasOne("ExaminationSystem.DAL.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExaminationSystem.DAL.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExaminationSystem.DAL.Models.ExamModel", b =>
                {
                    b.HasOne("ExaminationSystem.DAL.Models.Course", "Course")
                        .WithMany("ExamModels")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__ExamModel__Cours__6B24EA82");

                    b.HasOne("ExaminationSystem.DAL.Models.Instructor", "Instructor")
                        .WithMany("ExamModels")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__ExamModel__instr__6C190EBB");

                    b.Navigation("Course");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("ExaminationSystem.DAL.Models.ExamModelQuestion", b =>
                {
                    b.HasOne("ExaminationSystem.DAL.Models.ExamModel", "ExamModel")
                        .WithMany("ExamModelQuestions")
                        .HasForeignKey("ExamModelId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__ExamModel__examM__02084FDA");

                    b.HasOne("ExaminationSystem.DAL.Models.QuestionBank", "Question")
                        .WithMany("ExamModelQuestions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__ExamModel__quest__02FC7413");

                    b.Navigation("ExamModel");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("ExaminationSystem.DAL.Models.Instructor", b =>
                {
                    b.HasOne("ExaminationSystem.DAL.Models.Department", "Department")
                        .WithMany("Instructors")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ExaminationSystem.DAL.Models.QuestionBank", b =>
                {
                    b.HasOne("ExaminationSystem.DAL.Models.Course", "Course")
                        .WithMany("QuestionBanks")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__QuestionB__cours__656C112C");

                    b.HasOne("ExaminationSystem.DAL.Models.Instructor", "Instructor")
                        .WithMany("QuestionBanks")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__QuestionB__instr__6477ECF3");

                    b.Navigation("Course");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("ExaminationSystem.DAL.Models.QuestionBankChoice", b =>
                {
                    b.HasOne("ExaminationSystem.DAL.Models.QuestionBank", "Question")
                        .WithMany("QuestionBankChoices")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__QuestionB__quest__7F2BE32F");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("ExaminationSystem.DAL.Models.Student", b =>
                {
                    b.HasOne("ExaminationSystem.DAL.Models.Department", "Department")
                        .WithMany("Students")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__Student__Department__5AEE82B9");

                    b.HasOne("ExaminationSystem.DAL.Models.Instructor", "Instouctor")
                        .WithMany("Students")
                        .HasForeignKey("InstouctorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Instouctor");
                });

            modelBuilder.Entity("ExaminationSystem.DAL.Models.StudentSubmit", b =>
                {
                    b.HasOne("ExaminationSystem.DAL.Models.ExamModel", "ExamModel")
                        .WithMany("StudentSubmits")
                        .HasForeignKey("ExamModelId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__StudentSu__examM__70DDC3D8");

                    b.HasOne("ExaminationSystem.DAL.Models.Student", "Student")
                        .WithMany("StudentSubmits")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__StudentSu__stude__6FE99F9F");

                    b.Navigation("ExamModel");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ExaminationSystem.DAL.Models.StudentSubmitAnswer", b =>
                {
                    b.HasOne("ExaminationSystem.DAL.Models.StudentSubmit", "StudentSubmit")
                        .WithMany("StudentSubmitAnswers")
                        .HasForeignKey("StudentSubmitId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__StudentSu__Stude__06CD04F7");

                    b.HasOne("ExaminationSystem.DAL.Models.ExamModelQuestion", "ExamModelQuestion")
                        .WithMany("StudentSubmitAnswers")
                        .HasForeignKey("ExamModelId", "QuestionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__StudentSubmit_An__07C12930");

                    b.Navigation("ExamModelQuestion");

                    b.Navigation("StudentSubmit");
                });

            modelBuilder.Entity("ExaminationSystem.DAL.Models.Course", b =>
                {
                    b.Navigation("ExamModels");

                    b.Navigation("QuestionBanks");
                });

            modelBuilder.Entity("ExaminationSystem.DAL.Models.Department", b =>
                {
                    b.Navigation("Instructors");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("ExaminationSystem.DAL.Models.ExamModel", b =>
                {
                    b.Navigation("ExamModelQuestions");

                    b.Navigation("StudentSubmits");
                });

            modelBuilder.Entity("ExaminationSystem.DAL.Models.ExamModelQuestion", b =>
                {
                    b.Navigation("StudentSubmitAnswers");
                });

            modelBuilder.Entity("ExaminationSystem.DAL.Models.Instructor", b =>
                {
                    b.Navigation("ExamModels");

                    b.Navigation("QuestionBanks");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("ExaminationSystem.DAL.Models.QuestionBank", b =>
                {
                    b.Navigation("ExamModelQuestions");

                    b.Navigation("QuestionBankChoices");
                });

            modelBuilder.Entity("ExaminationSystem.DAL.Models.Student", b =>
                {
                    b.Navigation("StudentSubmits");
                });

            modelBuilder.Entity("ExaminationSystem.DAL.Models.StudentSubmit", b =>
                {
                    b.Navigation("StudentSubmitAnswers");
                });
#pragma warning restore 612, 618
        }
    }
}
